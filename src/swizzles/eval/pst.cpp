#include "pst.hpp"

namespace swizzles::eval {

// clang-format off
const std::array<int, 6 * 64> pst = {
    // Pawns - early/mid
    //  A   B   C   D   E   F   G   H
        0,  0,  0,  0,  0,  0,  0,  0, // 1
       -1, -7,-11,-35,-13,  5,  3, -5, // 2
        1,  1, -6,-19, -6, -7, -4, 10, // 3
        1, 14,  8,  4,  5,  4, 10,  7, // 4
        9, 30, 23, 31, 31, 23, 17, 11, // 5
       21, 54, 72, 56, 77, 95, 71, 11, // 6
      118,121,173,168,107, 82,-16, 22, // 7
        0,  0,  0,  0,  0,  0,  0,  0, // 8
    // Knights - early/mid
    //  A   B   C   D   E   F   G   H
      -99,-30,-66,-64,-29,-19,-61,-81, // 1
      -56,-31,-28, -1, -7,-20,-42,-11, // 2
      -38,-16,  0, 14,  8,  3,  3,-42, // 3
      -14,  0,  2,  3, 19, 12, 33, -7, // 4
      -14, -4, 25, 33, 10, 33, 14, 43, // 5
      -22, 18, 60, 64,124,143, 55,  6, // 6
      -34, 24, 54, 74, 60,122,  2, 29, // 7
      -60,  0,  0,  0,  0,  0,  0,  0, // 8
    // Bishops - early/mid
    //  A   B   C   D   E   F   G   H
       -7, 12, -8,-37,-31, -8,-45,-67, // 1
       15,  5, 13,-10,  1,  2,  0, 15, // 2
        5, 12, 14, 13, 10, -1,  3,  4, // 3
        1,  5, 23, 32, 21,  8, 17,  4, // 4
       -1, 16, 29, 27, 37, 27, 17,  4, // 5
        7, 27, 20, 56, 91,108, 53, 44, // 6
      -24,-23, 30, 58, 65, 61, 69, 11, // 7
        0,  0,  0,  0,  0,  0,  0,  0, // 8
    // Rooks - early/mid
    //  A   B   C   D   E   F   G   H
       -2, -1,  3,  1,  2,  1,  4, -8, // 1
      -26, -6,  2, -2,  2,-10, -1,-29, // 2
      -16,  0,  3, -3,  8, -1, 12,  3, // 3
       -9, -5,  8, 14, 18,-17, 13,-13, // 4
       19, 33, 46, 57, 53, 39, 53, 16, // 5
       24, 83, 54, 75,134,144, 85, 75, // 6
       46, 33, 64, 62, 91, 89, 70,104, // 7
       84,  0,  0, 37,124,  0,  0,153, // 8
    // Queens - early/mid
    //  A   B   C   D   E   F   G   H
        1,-10,-11,  3,-15,-51,-83,-13, // 1
       -7,  3,  2,  5, -1,-10, -7, -2, // 2
      -11,  0, 12,  2,  8, 11,  7, -6, // 3
       -9,  5,  7,  9, 18, 17, 26,  4, // 4
       -6,  0, 15, 25, 32,  9, 26, 12, // 5
      -16, 10, 13, 25, 37, 30, 15, 26, // 6
        1, 11, 35,  0, 16, 55, 39, 57, // 7
      -13,  6,-42,  0, 29,  0,  0,102, // 8
    // Kings - early/mid
    //  A   B   C   D   E   F   G   H
        0,  0,  0, -9,  0, -9, 25,  0, // 1
       -9, -9, -9, -9, -9, -9, -9, -9, // 2
       -9, -9, -9, -9, -9, -9, -9, -9, // 3
       -9, -9, -9, -9, -9, -9, -9, -9, // 4
       -9, -9, -9, -9, -9, -9, -9, -9, // 5
       -9, -9, -9, -9, -9, -9, -9, -9, // 6
       -9, -9, -9, -9, -9, -9, -9, -9, // 7
       -9, -9, -9, -9, -9, -9, -9, -9, // 8
};
// clang-format on

template <chess::Colour colour>
[[nodiscard]] auto pst_value(const chess::PieceType piece, const chess::Square sq) noexcept -> int {
    if constexpr (colour == chess::Colour::White) {
        return pst[index(piece) * 64 + index(sq)];
    } else {
        return pst[index(piece) * 64 + (index(sq) ^ 56)];
    }
}

template auto pst_value<chess::Colour::White>(const chess::PieceType piece, const chess::Square sq) noexcept -> int;
template auto pst_value<chess::Colour::Black>(const chess::PieceType piece, const chess::Square sq) noexcept -> int;

}  // namespace swizzles::eval
